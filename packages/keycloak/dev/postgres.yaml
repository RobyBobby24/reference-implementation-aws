apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mygp2
  namespace: keycloak
  annotations:
    storageclass.beta.kubernetes.io/aws-tags: "Owner=ro.distefano@reply.it,Environment=Development,Project=tirociniocnoe"
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgresql
  annotations:
    storageclass.beta.kubernetes.io/aws-tags: "Owner=ro.distefano@reply.it,Environment=Development,Project=tirociniocnoe"
  namespace: keycloak
  labels:
    app: postgresql
spec:
  storageClassName: mygp2
  capacity:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: keycloak
  labels:
    app: postgresql
spec:
  serviceName: service-postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgres
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 300Mi
        image: docker.io/library/postgres:15.3-alpine3.18
        envFrom:
        - secretRef:
            name: postgresql-config
        ports:
        - containerPort: 5432
          name: postgresdb
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
          subPath: postgress
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: postgresql

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: keycloak
  labels:
    app: postgresql
spec:
  ports:
  - port: 5432
    name: postgres
  clusterIP: None
  selector:
    app: postgresql
